# zakiev_marat_lesson_3_1
#
# 1. Написать функцию num_translate(), переводящую числительные от 0 до 10
# c английского на русский язык. Например:
# >>> num_translate("one")
# "один"
# >>> num_translate("eight")
# "восемь"
#
# Если перевод сделать невозможно, вернуть None.
# Подумайте, как и где лучше хранить информацию, необходимую для перевода:
# какой тип данных выбрать, в теле функции или снаружи.

# ------------------------------------------------------------------------------
# Ответ: лучше использовать словарь - не нужен индекс, а значение ключа поступает как входной аргумент.
#
# Если словарь необходимо использовать в программе за пределами функции, то лучше словарь поместить до функции;
# Иначе: внутри функции - при изменении функции (или копировании в другой проект) будет удобнее и читабельнее.
# Кроме того, предполагаю, что если словарь объявлен до функции, то он уже займет место в памяти,
# а если в теле функции, то словарь загрузится только при вызове функции.


# объявление функции
def num_translate(en_num):
    """
    Function for translating English numerals (from zero to ten) into Russian
    :param en_num: str
    :return: str
    """
    eng_rus = {
        'zero': 'ноль',
        'one': 'один',
        'two': 'два',
        'three': 'три',
        'four': 'четыре',
        'five': 'пять',
        'six': 'шесть',
        'seven': 'семь',
        'eight': 'восемь',
        'nine': 'девять',
        'ten': 'десять'
    }
    return eng_rus.get(en_num)


print('Программа перевода английских числительных (от 0 до 10) на русский язык')
print('Program for translating English numerals (from zero to ten) into Russian')
print('*' * 73)
input_str = ''
while input_str != 'exit':
    input_str = input('Введите английское числительное (например: five)\n[для выхода введите "exit"]: ')
    if input_str == 'exit':
        print('Вы вышли из программы')
    else:
        print(num_translate(input_str))  # выводим перевод


# # # для теста прогоним значения из цикла
# for i in [
#     'zero',
#     'one',
#     'two',
#     'three',
#     'four',
#     'five',
#     'six',
#     'seven',
#     'eight',
#     'nine',
#     'ten',
#     'hello, Guido!',
#     15,
#     'one two',
#     'four, five'
# ]:
#     print(num_translate(i))  # выводим перевод
